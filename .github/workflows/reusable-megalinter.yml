# ==================================================================
# reusable-megalinter.yml
# ==================================================================
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
# ==================================================================
name: LINT EVERYTHING!

on:

    workflow_call:

        inputs:
            apply-fixes-event:
                description: Which events will trigger fixes to be applied?
                required: false
                type: string
            apply-fixes-mode:
                description: Will fixes be committed directly to the repo, or will a pull_request be raised?
                required: false
                type: string

permissions:
    contents: read            # git permissions to repo pull/push
    statuses: write           # read/write to repo custom statuses and checks
    packages: write           # read/write to packages

jobs:

    mega-lint:

        name: Mega-Linter
        runs-on: ubuntu-latest

        steps:

            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  # Full git history is needed to get a proper list of changed files within super-linter
                  fetch-depth: 0

            # used as a debug step to ensure we're only linting all files on release branches
            - name: Are we linting all files?
              run: |
                  echo VALIDATE_ALL_CODEBASE=${{ !contains(github.event_name, 'pull_request') }}

            # which events will trigger fixes to be applied?
            - name: APPLY_FIXES_EVENT
              if: ${{ inputs.apply-fixes-event }}
              run: |
                  echo "APPLY_FIXES_EVENT=${{ inputs.apply-fixes-event }}" >> $GITHUB_ENV

            - name: APPLY_FIXES_EVENT EMPTY
              if: ${{ !inputs.apply-fixes-event }}
              run: |
                  echo "APPLY_FIXES_EVENT=all" >> $GITHUB_ENV

            # which mode are fixes going to be applied in?
            - name: APPLY_FIXES_MODE
              if: ${{ inputs.apply-fixes-mode }}
              run: |
                  echo "APPLY_FIXES_MODE=${{ inputs.apply-fixes-mode }}" >> $GITHUB_ENV

            - name: APPLY_FIXES_MODE EMPTY
              if: ${{ !inputs.apply-fixes-mode }}
              run: |
                  echo "APPLY_FIXES_MODE=pull_request" >> $GITHUB_ENV

            # Run many Linters against changed files on PRs, and ALL files on commit to release branch
            # https://github.com/marketplace/actions/megalinter
            - name: Lint Code Base
              uses: oxsecurity/megalinter@v7
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  # by default super-linter assumes our repo default branch doesn't change
                  # and it also assumes our PRs are always against that default branch
                  # for multi-trunk (releases) repos, this get the base branch from the previous steps
                  # see issue https://github.com/github/super-linter/issues/1123
                  DEFAULT_BRANCH: ${{ env.DEFAULT_BRANCH }}
                  # setting this to false means that only changed files will be scanned in each commit
                  VALIDATE_ALL_CODEBASE: ${{ !contains(github.event_name, 'pull_request') }}
                  # FIXES
                  APPLY_FIXES_EVENT: ${{ env.APPLY_FIXES_EVENT }}
                  APPLY_FIXES_MODE: ${{ env.APPLY_FIXES_MODE }}

            # Artifacts Upload may be used as an alternative to File.io Reporter
#            - name: Archive Report Artifacts
#              uses: actions/upload-artifact@v3
#              with:
#                  name: JSON Report
#                  path: /github/workspace/megalinter-reports/mega-linter-report.json
#
#            - name: Archive Fixed Sources
#              uses: actions/upload-artifact@v3
#              with:
#                  name: Fixed Sources
#                  path: /github/workspace/megalinter-reports/updated_sources/**
